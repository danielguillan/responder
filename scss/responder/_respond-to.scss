// =============================================================================
// Respond-to mixin
// =============================================================================

@mixin respond-to($breakpoint) {

	$breakpoint-info: getBreakpointInfo($breakpoint);

	// Breakpoint info error
	@if $breakpoint-info == 'error' {
		@warn '[ERROR] Invalid breakpoint parameter';

	// Respond to IE
	} @else if $breakpoint-info == 'ie' {
		// Only print content if support is true
		@if $old-ie-support == true {
			@content;
		}

	} @else {

		$breakpoint-name: nth($breakpoint-info, 1);
		$breakpoint-extend: nth($breakpoint-info, 2);
		$breakpoint-group: nth($breakpoint-info, 3);
		$breakpoint-group-id: nth($breakpoint-info, 4);

		$min-width: 0;
		$max-width: 0;

		@if $old-ie-support == true {

			@if yepnope($breakpoint-names, $old-ie-breakpoint) {

				// Get the value of the old-ie breakpoint
				$old-ie-breakpoint-value: nth($breakpoint-values, index($breakpoint-names, $old-ie-breakpoint));

				$breakpoint-value: null;

				@if $breakpoint-group == true {
					// Get the group min-width
					$breakpoint-value: nth( nth($breakpoint-groups, $breakpoint-group-id), 2);
				} @else {
					// Get the breakpoint value
					$breakpoint-value: nth($breakpoint-values, index($breakpoint-names, $breakpoint-name));
				}

				// Check if the media query should respond
				@if $breakpoint-extend == 'only' and $breakpoint-value == $old-ie-breakpoint-value {
					@content;
				} @else if $breakpoint-extend == 'and-up' and $old-ie-breakpoint-value >= $breakpoint-value{
					@content;
				} @else if $breakpoint-extend == 'and-below' and $old-ie-breakpoint-value <= $breakpoint-value {
					@content;
				}
			} @else {
				// Invlaid $old-ie-breakpoint value
				@warn "[ERROR] "+ $old-ie-breakpoint +" is not a valid breakpoint name for $old-ie-breakpoint. Valid breakpoint names are: "+ $breakpoint-names
			}


		} @else {

			// If it's a regular breakpoint
			@if $breakpoint-group == false {
				$min-width: nth($breakpoint-values, index($breakpoint-names, $breakpoint-name));

				// Only set a max-width if it's not the last breakpoint
				@if (index($breakpoint-names, $breakpoint-name) + 1) <= length($breakpoint-values) {
					$max-width: nth($breakpoint-values, (index($breakpoint-names, $breakpoint-name) + 1));
				} @else {
					@if $breakpoint-extend == and-below {
						$max-width: nth($breakpoint-values, (index($breakpoint-names, $breakpoint-name)));
					} @else {
						$breakpoint-extend: and-up;
					}
				}

			// If it's a breakpoint group
			} @else {
				$min-width: nth( nth($breakpoint-groups, $breakpoint-group-id), 2);
				$max-width: nth( nth($breakpoint-groups, $breakpoint-group-id), 3);
			}

			@if $breakpoint-extend == only {
				@media #{$responder-media-type} and (min-width: getSize($min-width)) and (max-width: getSize($max-width - 1)) { @content; }
			} @else if $breakpoint-extend == and-up {
				@media #{$responder-media-type} and (min-width: getSize($min-width)) { @content; }
			} @else if $breakpoint-extend == and-below {
				@media #{$responder-media-type} and (max-width: getSize($max-width - 1)) { @content; }
			}
		}
	}
}
